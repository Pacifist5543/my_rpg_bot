from telebot import TeleBot, types
from threading import Thread
from threading import Thread
from database import Session
from database import create_all_table
from database import User
import random
from sqlalchemy import update


session = Session()
create_all_table()
way = 0

TOKEN = 
bot = TeleBot(TOKEN)

start_kb = types.InlineKeyboardMarkup()
btn = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data="start_game")
start_kb.row(btn)
kb = types.InlineKeyboardMarkup()
continue_kb = types.InlineKeyboardMarkup()
continue_kb.add(
    types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="contenur_adventure")
)


@bot.message_handler(commands=["start"])
def handle_start(msg: types.Message):

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    user = session.query(User).filter_by(user_id=msg.from_user.id).first()

    if not user:
        bot.send_message(
            msg.chat.id,
            "–ü—Ä–∏–≤–µ—Ç! –Ø –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è, –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º–∞—è, –ª—É—á—à–∞—è RPG –∏–≥—Ä–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ",
            reply_markup=start_kb,
        )
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        new_user = User(
            user_id=msg.from_user.id,
            username=msg.from_user.username,
            race="–ù–µ –≤—ã–±—Ä–∞–Ω",
        )
        session.add(new_user)
        session.commit()
    else:
        bot.send_message(
            msg.chat.id,
            f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.race}, {user.nickname}!",
            reply_markup=continue_kb,
        )

    all_users = session.query(User).all()
    for user in all_users:
        print(f"{user.user_id} ({user.username})")


@bot.callback_query_handler(lambda call: call.data == "start_game")
def handle_start_game(call: types.CallbackQuery):
    bot.delete_message(call.message.chat.id, call.message.id)
    bot.send_message(
        call.message.chat.id,
        "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã –Ω–∞—á–∞–ª –∏–≥—Ä—É!\n" "–ü—Ä–∏–¥—É–º–∞–π –∏–º—è —Å–≤–æ–µ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É: ",
        reply_markup=kb,
    )
    bot.register_next_step_handler(call.message, process_name)


def process_name(message: types.Message):
    user_name = message.text
    session.query(User).filter(User.user_id == message.from_user.id).update(
        {"nickname": user_name}
    )
    session.commit()

    kb = types.InlineKeyboardMarkup().add(
        types.InlineKeyboardButton("–ß–µ–ª–æ–≤–µ–∫", callback_data="race:–ß–µ–ª–æ–≤–µ–∫"),
        types.InlineKeyboardButton("–≠–ª—å—Ñ", callback_data="race:–≠–ª—å—Ñ"),
        types.InlineKeyboardButton("–í–µ—Ä–≤–æ–ª—å—Ñ", callback_data="race:–í–µ—Ä–≤–æ–ª—å—Ñ"),
        types.InlineKeyboardButton("–í–∞–º–ø–∏—Ä", callback_data="race:–í–∞–º–ø–∏—Ä"),
        types.InlineKeyboardButton("–°–∫–µ–ª–µ—Ç", callback_data="race:–°–∫–µ–ª–µ—Ç"),
    )

    bot.send_message(
        message.chat.id,
        f"–û—Ç–ª–∏—á–Ω–æ–µ –∏–º—è, {user_name}! –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏ —Å–≤–æ—é —Ä–∞—Å—É:\n"
        "1. –ß–µ–ª–æ–≤–µ–∫\n"
        "‚öîÔ∏è +10% –∫ —É—Ä–æ–Ω—É –º–µ—á–æ–º\n"
        "üíº –ù–∞—á–∏–Ω–∞—é—Ç —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –∑–æ–ª–æ—Ç–æ–º\n"
        "üéØ –ù–µ—Ç –æ—Å–æ–±—ã—Ö —Å–ª–∞–±–æ—Å—Ç–µ–π\n"
        "\n"
        "2. –≠–ª—å—Ñ"
        "üåø +20% –∫ –º–∞–≥–∏–∏\n"
        "üõ°Ô∏èüåø 20% –∏–º–º—É–Ω–∏—Ç–µ—Ç –∫ –º–∞–≥–∏–∏\n"
        "‚öîÔ∏è  –°–ª–∞–±—ã –∫ –±–ª–∏–∂–Ω–µ–º—É –æ—Ä—É–∂–∏—é(–Ω–∞ 10% —É—Ä–æ–Ω–∞ –±–æ–ª—å—à–µ)\n"
        "\n"
        "3. –í–µ—Ä–≤–æ–ª—å—Ñ\n"
        "üê∫ +25% –∫ —É—Ä–æ–Ω—É –≤ –Ω–æ—á–Ω–æ–µ –≤—Ä–µ–º—è\n"
        "‚öîÔ∏è –°–ª–∞–±—ã –∫ —Å–µ—Ä–µ–±—Ä—è–Ω–æ–º—É –æ—Ä—É–∂–∏—é(–Ω–∞ 15% —É—Ä–æ–Ω–∞ –±–æ–ª—å—à–µ )\n"
        "\n"
        "4. –í–∞–º–ø–∏—Ä\n"
        "ü¶á –ü—å—é—Ç –∫—Ä–æ–≤—å –≤—Ä–∞–≥–æ–≤ (+3HP –∑–∞ —É–¥–∞—Ä)\n"
        "üåû –ì–æ—Ä—è—Ç –Ω–∞ —Å–æ–ª–Ω—Ü–µ (-2 HP/—Ö–æ–¥ –ø—Ä–∏ —Å–≤–µ—Ç–µ –¥–Ω—è)\n"
        "‚öîÔ∏è –°–ª–∞–±—ã –∫ —Å–µ—Ä–µ–±—Ä—è–Ω–æ–º—É –æ—Ä—É–∂–∏—é(–Ω–∞ 20% —É—Ä–æ–Ω–∞ –±–æ–ª—å—à–µ)\n"
        "\n"
        "5. –°–∫–µ–ª–µ—Ç\n"
        "üíÄ –ò–º–º—É–Ω–∏—Ç–µ—Ç –∫ –¥–µ–±–∞—Ñ–∞–º\n"
        "üõ°Ô∏è‚ûñ –ø–æ–ª—É—á–∞—é—Ç –Ω–∞ 10% –±–æ–ª—å—à–µ —É—Ä–æ–Ω–∞\n",
        reply_markup=kb,
    )


@bot.callback_query_handler(func=lambda callback: callback.data.startswith("race"))
def handle_callback(callback: types.CallbackQuery):
    _, race = callback.data.split(":")

    session.query(User).filter(User.user_id == callback.from_user.id).update(
        {"race": race}
    )
    session.commit()

    if race == "–ß–µ–ª–æ–≤–µ–∫":
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        continue_kb = types.InlineKeyboardMarkup()
        continue_kb.add(
            types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="start_adventure")
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–µ–π
        bot.send_message(
            callback.message.chat.id,
            "–ù—É –≤–æ—Ç —Ç–µ–ø–µ—Ä—å —Ç—ã —Ç–æ—á–Ω–æ –Ω–∞—á–∞–ª –∏–≥—Ä—É!\n\n"
            "üìú *–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è:*\n"
            "–¢—ã –≤—Å—é –∂–∏–∑–Ω—å —Å–ª—É–∂–∏–ª –∫–æ—Ä–æ–ª—é –≤–µ—Ä–æ–π –∏ –ø—Ä–∞–≤–¥–æ–π, –Ω–æ –≤ –æ–¥–∏–Ω –º–æ–º–µ–Ω—Ç –ø—Ä–æ–≤–∞–ª–∏–ª –æ–¥–Ω–æ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ, "
            "–Ω–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ.\n\n"
            "–ö–æ—Ä–æ–ª—å –ø—Ä–∏–∫–∞–∑–∞–ª –∫–∞–∑–Ω–∏—Ç—å —Ç–µ–±—è, –Ω–æ —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å —Å–±–µ–∂–∞—Ç—å –∏ —Å–∫—Ä—ã—Ç—å—Å—è –≤ —Ç–æ–ª–ø–µ –ª—é–¥–µ–π –≤ —Å–∞–ª—É–Ω–µ, "
            "–≥–¥–µ —Ç—ã –Ω–µ–º–Ω–æ–≥–æ –≤—ã–ø–∏–ª.\n\n"
            "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ç–µ–±—è –≤–æ –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –Ω–∞—à–ª–∏ —Å—Ç—Ä–∞–∂–∏, –Ω–æ –∏ –≤ —ç—Ç–æ—Ç —Ä–∞–∑ —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å —Å–±–µ–∂–∞—Ç—å. "
            "–¢—ã —É–±–µ–∂–∞–ª –¥–∞–ª–µ–∫–æ –≤ –ª–µ—Å, –≥–¥–µ –æ—Ç–∫–ª—é—á–∏–ª—Å—è, –∞ –∫–æ–≥–¥–∞ –ø—Ä–æ—Å–Ω—É–ª—Å—è - –ø–æ–Ω—è–ª, —á—Ç–æ —Ç–µ–±—è –æ–≥—Ä–∞–±–∏–ª–∏. "
            "–û—Å—Ç–∞–≤–∏–ª–∏ —Ç–µ–±–µ —Ç–æ–ª—å–∫–æ –º–µ—á –∏ 5 –∑–æ–ª–æ—Ç—ã—Ö, –∫–æ—Ç–æ—Ä—ã–µ –æ–Ω–∏ –Ω–µ –Ω–∞—à–ª–∏.\n\n"
            "–¢–∞–∫ –∏ –Ω–∞—á–∞–ª–∞—Å—å —Ç–≤–æ—è –∏—Å—Ç–æ—Ä–∏—è...",
            parse_mode="Markdown",
            reply_markup=continue_kb,
        )

        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ä–∞—Å—ã
        bot.delete_message(callback.message.chat.id, callback.message.message_id)

    elif race == "–≠–ª—å—Ñ":
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        continue_kb = types.InlineKeyboardMarkup()
        continue_kb.add(
            types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="start_adventure")
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–µ–π
        bot.send_message(
            callback.message.chat.id,
            "üåø *–ù—É –≤–æ—Ç —Ç–µ–ø–µ—Ä—å —Ç—ã —Ç–æ—á–Ω–æ –Ω–∞—á–∞–ª –∏–≥—Ä—É!*\n\n"
            "üìñ *–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è:*\n"
            "–¢—ã - –ª–µ—Å–Ω–æ–π –≠–ª—å—Ñ üå≥, –∫–æ—Ç–æ—Ä—ã–π –≤—Å—é –∂–∏–∑–Ω—å –ø—Ä–æ–≤—ë–ª –≤ –¥—Ä–µ–≤–Ω–∏—Ö —Ä–æ—â–∞—Ö. "
            "–¢—ã —Ö–æ—Ä–æ—à–æ –æ–≤–ª–∞–¥–µ–ª –∫–∞–∂–¥—ã–º —Ç–∏–ø–æ–º –º–∞–≥–∏–∏, –Ω–æ —Ç–µ–±–µ –µ—â–µ —Å—Ç—å –∫—É–¥–∞ —Å—Ç–µ–º–∏—Ç—å—Å—è.\n"
            "üçÉ –¢—ã –Ω–∞—Å—Ç–æ–ª—å–∫–æ –ø–æ–≥—Ä—É–∑–∏–ª—Å—è –≤ –≥–æ—Ä–º–æ–Ω–∏—é —Å –ª–µ—Å–æ–º —á—Ç–æ –º–æ–≥ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å —Å –¥–µ—Ä–µ–≤—å—è–º–∏...\n\n"
            "üî• *–ß—ë—Ä–Ω—ã–π –¥–µ–Ω—å:*\n"
            "–õ—é–¥–∏ –ø–æ–¥–æ–∂–≥–ª–∏ —Ç–≤–æ–π —Ä–æ–¥–Ω–æ–π –ª–µ—Å üå≤üî•. –¢—ã –≤–∏–¥–µ–ª, –∫–∞–∫ –≥–∏–±–Ω—É—Ç –≤–µ–∫–æ–≤—ã–µ –¥–µ—Ä–µ–≤—å—è, "
            "–∞ —Ç–≤–æ–∏ —Å–æ—Ä–æ–¥–∏—á–∏ –±–µ–≥—É—Ç –≤ —É–∂–∞—Å–µ...\n\n"
            "üö∂ *–ù–æ–≤—ã–π –ø—É—Ç—å:*\n"
            "–° –ø–µ–ø–ª–æ–º –≤ –≤–æ–ª–æ—Å–∞—Ö –∏ –±–æ–ª—å—é –≤ —Å–µ—Ä–¥—Ü–µ üíî —Ç—ã –ø–æ–∫–∏–Ω—É–ª —ç—Ç–æ –º–µ—Å—Ç–æ. "
            "–¢–µ–ø–µ—Ä—å —Ç—ã —Å—Ç—Ä–∞–Ω–Ω–∏–∫ –±–µ–∑ –¥–æ–º–∞, –Ω–æ —Å —Ç–≤—ë—Ä–¥–æ–π —Ü–µ–ª—å—é –≤ —Å–µ—Ä–¥—Ü–µ.\n\n"
            "‚ú® *–ò –∏–º–µ–Ω–Ω–æ —Å —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç–≤–æ—ë –Ω–∞—Å—Ç–æ—è—â–µ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ...*",
            parse_mode="Markdown",
            reply_markup=continue_kb,
        )
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ä–∞—Å—ã
        bot.delete_message(callback.message.chat.id, callback.message.message_id)

    elif race == "–í–µ—Ä–≤–æ–ª—å—Ñ":
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        continue_kb = types.InlineKeyboardMarkup()
        continue_kb.add(
            types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="start_adventure")
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–µ–π
        bot.send_message(
            callback.message.chat.id,
            "üê∫ –ù—É –≤–æ—Ç —Ç–µ–ø–µ—Ä—å —Ç—ã —Ç–æ—á–Ω–æ –Ω–∞—á–∞–ª –∏–≥—Ä—É!\n\n"
            "üìú –ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è: –¥–Ω–µ–º —Ç—ã –æ–±—ã—á–Ω—ã–π –∂–∏—Ç–µ–ª—å –≥–æ—Ä–æ–¥–∞ üèôÔ∏è, –Ω–æ –Ω–æ—á—å—é —Ç—ã –ø—Ä–µ–≤—Ä–∞—â–∞–µ—à—å—Å—è –≤ —Å–≤–∏—Ä–µ–ø–æ–≥–æ –≤–æ–ª–∫–∞ üåï!\n"
            "üò§ –ù–æ —Ç—ã –≤—Å—é –Ω–æ—á—å –≤—ã–Ω—É–∂–¥–µ–Ω –ø—Ä—è—Ç–∞—Ç—å—Å—è –≤ –æ–≥—Ä–æ–º–Ω–æ–º –∑–∞–º–∫–µ –î—Ä–∞–∫—É–ª—ã üè∞...\n\n"
            "üí¢ –ù–∞–∫–æ–Ω–µ—Ü —Ç—ã —É—Å—Ç–∞–ª –æ—Ç —ç—Ç–æ–≥–æ –¥–≤—É–ª–∏—á–∏—è, —Ö–æ—Ç–µ–ª –ø–æ–∫–∞–∑–∞—Ç—å –ª—é–¥—è–º, —á—Ç–æ –≤–æ –≤—Ç–æ—Ä–æ–º –æ–±–ª–∏—á–∏–∏ —Ç—ã –±–µ–∑–æ–ø–∞—Å–µ–Ω üëê,\n"
            "üî• –Ω–æ –æ–Ω–∏ –Ω–µ –∑–∞—Ö–æ—Ç–µ–ª–∏ —Ç–µ–±—è —Å–ª—É—à–∞—Ç—å ‚Äî —Ö–æ—Ç–µ–ª–∏ —Å–∂–µ—á—å! üò±\n"
            "üèÉ –¢—ã —Å–º–æ–≥ —É–±–µ–∂–∞—Ç—å... –∏ —Ç–µ–ø–µ—Ä—å –Ω–∞–º–µ—Ä–µ–Ω –æ—Ç–æ–º—Å—Ç–∏—Ç—å! ‚öîÔ∏è\n\n"
            "üöÄ –í–æ—Ç —Ç–∞–∫ —Ç—ã –∏ –Ω–∞—á–Ω–µ—à—å —Å–≤–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ!",
            parse_mode="Markdown",
            reply_markup=continue_kb,
        )
        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º —Ä–∞—Å—ã
        bot.delete_message(callback.message.chat.id, callback.message.message_id)

    elif race == "–°–∫–µ–ª–µ—Ç":
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        continue_kb = types.InlineKeyboardMarkup()
        continue_kb.add(
            types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="start_adventure")
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–µ–π
        bot.send_message(
            callback.message.chat.id,
            "ü¶¥ *–ù—É –≤–æ—Ç —Ç–µ–ø–µ—Ä—å —Ç—ã —Ç–æ—á–Ω–æ –Ω–∞—á–∞–ª –∏–≥—Ä—É!*\n\n"
            "üìú *–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è:*\n"
            "–¢—ã –±—ã–ª –æ–±—ã—á–Ω—ã–º —Å–º–µ—Ä—Ç–Ω—ã–º, —Å—Ç—Ä–∞—Å—Ç–Ω–æ –∂–µ–ª–∞–≤—à–∏–º –æ–±—Ä–µ—Å—Ç–∏ –±–µ—Å—Å–º–µ—Ä—Ç–∏–µ. –ù–æ –∫–æ–≤–∞—Ä–Ω–∞—è –≤–µ–¥—å–º–∞ –æ–±–º–∞–Ω–æ–º –Ω–∞–ª–æ–∂–∏–ª–∞ –Ω–∞ —Ç–µ–±—è "
            "—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–æ–∫–ª—è—Ç–∏–µ, –ø—Ä–µ–≤—Ä–∞—Ç–∏–≤ –≤ —Ö–æ–¥—è—á–∏–π —Å–∫–µ–ª–µ—Ç.\n\n"
            "‚ò†Ô∏è *–¢–≤–æ–∏ –æ—Ç—á–∞—è–Ω–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏:*\n"
            "‚Ä¢ –ü–∏–ª —Å–º–µ—Ä—Ç–µ–ª—å–Ω—ã–µ —è–¥—ã... –Ω–æ –æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –≤—ã—Ç–µ–∫–∞–ª–∏ —Å–∫–≤–æ–∑—å —Ä–µ–±—Ä–∞\n"
            "‚Ä¢ –ü—Ä—ã–≥–∞–ª —Å –≤—ã—Å–æ—á–∞–π—à–∏—Ö —É—Ç—ë—Å–æ–≤... –Ω–æ –∫–æ—Å—Ç–∏ —Å–æ–±–∏—Ä–∞–ª–∏—Å—å –≤–Ω–æ–≤—å\n"
            "‚Ä¢ –£–º–æ–ª—è–ª –º–∞–≥–æ–≤ —Å—Ç–µ—Ä–µ—Ç—å —Ç–≤–æ—é –¥—É—à—É... –Ω–æ –ø—Ä–æ–∫–ª—è—Ç–∏–µ –æ–∫–∞–∑–∞–ª–æ—Å—å —Å–∏–ª—å–Ω–µ–µ\n\n"
            "üíÄ *–¢–µ–ø–µ—Ä—å —Ç—ã –æ–±—Ä–µ—á—ë–Ω:*\n"
            "–í–µ—á–Ω–æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∂—É—Ç–∫–æ–º –ø–æ–ª—É–º—Ä–∞–∫–µ –º–µ–∂–¥—É –∂–∏–∑–Ω—å—é –∏ —Å–º–µ—Ä—Ç—å—é, "
            "–≥–¥–µ –Ω–µ—Ç –Ω–∏ –ø–æ–∫–æ—è, –Ω–∏ –∑–∞–±–≤–µ–Ω–∏—è...\n\n"
            "üåë *–ò –∏–º–µ–Ω–Ω–æ —Å —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Ç–≤–æ–∏ –ø–æ–∏—Å–∫–∏...*",
            parse_mode="Markdown",
            reply_markup=continue_kb,
        )

        bot.delete_message(callback.message.chat.id, callback.message.message_id)

    elif race == "–í–∞–º–ø–∏—Ä":
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è
        continue_kb = types.InlineKeyboardMarkup()
        continue_kb.add(
            types.InlineKeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="start_adventure")
        )

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—é
        backstories = [
            # –ü–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç (–≤–∞—à –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π)
            "–ù—É –≤–æ—Ç —Ç–µ–ø–µ—Ä—å —Ç—ã —Ç–æ—á–Ω–æ –Ω–∞—á–∞–ª –∏–≥—Ä—É!\n\n"
            "üìú *–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è:*\n"
            "–¢—ã –∫–æ–≥–¥–∞-—Ç–æ –±—ã–ª —Å–º–µ—Ä—Ç–Ω—ã–º, –Ω–æ –æ–¥–Ω–∞–∂–¥—ã –Ω–æ—á—å—é —Ç–µ–±—è –Ω–∞—à–ª–∏ –¥—Ä–µ–≤–Ω–∏–µ –≤–∞–º–ø–∏—Ä—ã - –∏–ª–∏, –º–æ–∂–µ—Ç, —Ç—ã —Å–∞–º –∏—Å–∫–∞–ª —Å–∏–ª—É, "
            "–ø—Ä–æ–¥–∞–≤ –¥—É—à—É –∑–∞ –±–µ—Å—Å–º–µ—Ä—Ç–∏–µ?\n\n"
            "–¢–µ–ø–µ—Ä—å —Ç—ã –∏ —Ç–≤–æ—è –¥—É—à–∞ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç–µ —Ç—å–º–µ. –°–æ–ª–Ω—Ü–µ –∂–∂—ë—Ç —Ç–≤–æ—é –∫–æ–∂—É, —Å–≤—è—Ç–∞—è –≤–æ–¥–∞ –æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ–∂–æ–≥–∏, "
            "–∞ –≤ –∑–µ—Ä–∫–∞–ª–∞—Ö –Ω–µ –æ—Ç—Ä–∞–∂–∞–µ—Ç—Å—è –¥—É—à–∞... —Ç–æ–ª—å–∫–æ –ø—É—Å—Ç–æ—Ç–∞.\n\n"
            "–ù–æ –∂–∞–∂–¥–∞ –∫—Ä–æ–≤–∏ - –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∫–ª—è—Ç–∏–µ, –∞ –¥–∞—Ä. –¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, –∫–∞–∫ –∂–∏–∑–Ω—å –¥—Ä—É–≥–∏—Ö –ø—É–ª—å—Å–∏—Ä—É–µ—Ç –≤ –∏—Ö –≤–µ–Ω–∞—Ö, "
            "–∑–æ–≤—ë—Ç —Ç–µ–±—è, –º–∞–Ω–∏—Ç...\n\n"
            "–í–æ—Ç —Ç–∞–∫ —Ç—ã –∏ –Ω–∞—á–Ω—ë—à—å —Å–≤–æ—ë –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ.",
            # –í—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç (–≤–∞—à —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π)
            "*üìú –ü—É—Ç—å –≤ –ë–µ—Å—Å–º–µ—Ä—Ç–∏–µ:*\n"
            "–ë—É–¥—É—á–∏ –æ–±–≤–æ—Ä–æ–≤–∞–Ω–Ω—ã–º –∏ –æ—Ç—á–∞—è–≤—à–∏–º—Å—è, —Ç—ã –ø–æ–≤–µ—Ä–∏–ª \n"
            "–Ω–µ–∑–Ω–∞–∫–æ–º—Ü—É –≤ –∞–ª—ã—Ö –æ–¥–µ–∂–¥–∞—Ö. –ï–≥–æ –æ–±–µ—â–∞–Ω–∏—è *–∑–æ–ª–æ—Ç–∞ –∏ –≤–ª–∞—Å—Ç–∏* \n"
            "–ø—Ä–∏–≤–µ–ª–∏ —Ç–µ–±—è –≤ –∑–∞–º–æ–∫, –≥–¥–µ:\n"
            "*üëë –í –∑–∞–ª–µ —Å –ø–∞—É—Ç–∏–Ω–æ–π –Ω–∞ —Ç—Ä–æ–Ω–µ —Å–∏–¥–µ–ª... –û–Ω.*\n"
            '"–•–æ—á–µ—à—å –ª–∏ —Ç—ã *–≤–µ—á–Ω–æ—Å—Ç–∏*?" ‚Äî –ø—Ä–æ—à–µ–ª–µ—Å—Ç–µ–ª–∏ –µ–≥–æ –≥—É–±—ã. \n'
            "–¢–≤–æ–π –∫–∏–≤–æ–∫ —Å—Ç–∞–ª —Ä–æ–∫–æ–≤—ã–º. \n"
            "*ü¶á –ü—Ä–µ–æ–±—Ä–∞–∂–µ–Ω–∏–µ:*\n"
            "–ï–≥–æ –∫–ª—ã–∫–∏ –≤–ø–∏–ª–∏—Å—å –≤ —à–µ—é... –ë–æ–ª—å —Å–º–µ–Ω–∏–ª–∞—Å—å *—ç–∫—Å—Ç–∞–∑–æ–º*, \n"
            "–∞ –Ω–∞—É—Ç—Ä–æ ‚Äî *–∞–≥–æ–Ω–∏–µ–π* –ø–µ—Ä–≤–æ–≥–æ —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ –ª—É—á–∞. \n"
            "*üíÄ –¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å –ø—Ä–∞–≤–¥—É:*\n"
            "–¢–æ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü –±—ã–ª *–î—Ä–∞–∫—É–ª–æ–π*, \n"
            '–∞ —Ç–≤–æ—è "–Ω–∞–≥—Ä–∞–¥–∞" ‚Äî –≤–µ—á–Ω–∞—è –∂–∞–∂–¥–∞ –∫—Ä–æ–≤–∏.',
        ]

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
        selected_story = random.choice(backstories)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.send_message(
            callback.message.chat.id,
            selected_story,
            parse_mode="Markdown",
            reply_markup=continue_kb,
        )

        # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        bot.delete_message(callback.message.chat.id, callback.message.message_id)


@bot.callback_query_handler(func=lambda callback: callback.data.startswith("start_adventure"))
def handle_callback(callback: types.CallbackQuery):
    user = session.query(User).filter(User.user_id == callback.from_user.id).first()
    
    if user.race == "–≠–ª—å—Ñ":  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–¥–∏–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ
        continue_kb = types.InlineKeyboardMarkup()
        continue_kb.add(types.InlineKeyboardButton("–ù–∞–ª–µ–≤–æ", callback_data="continue_adventure_left"))
        continue_kb.add(types.InlineKeyboardButton("–ù–∞–ø—Ä–∞–≤–æ", callback_data="continue_adventure_right"))
        continue_kb.add(types.InlineKeyboardButton("–ü—Ä—è–º–æ", callback_data="continue_adventure_line"))
        continue_kb.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="continue_adventure_back"))
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        bot.send_message(
            callback.message.chat.id,
            "–í—ã–±–µ—Ä–∏ –∫—É–¥–∞ –ø–æ–π–¥—ë—à—å:",
            reply_markup=continue_kb
        )

@bot.callback_query_handler(func=lambda callback: callback.data.startswith("continue_adventure"))
def handle_adventure_choice(callback: types.CallbackQuery):
    *_, direction = callback.data.split("_")
    user = session.query(User).filter(User.user_id == callback.from_user.id).first()

    if user.race == "–≠–ª—å—Ñ":  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ

        
        if direction == 'left':
            continue_kb = types.InlineKeyboardMarkup()
            continue_kb.add(types.InlineKeyboardButton("–ò–¥—Ç–∏ –¥–∞–ª—å—à–µ", callback_data="continue_adventure_con")),
            *_, direction1 = callback.data.split("_"),
            continue_kb.add(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="continue_adventure_razvilka")),
            story = '–¢—ã –ø–æ—à–µ–ª –Ω–∞–ª–µ–≤–æ..,\n' \
            '–Ω–æ –ø–æ–∫–∞ –Ω–µ—á–µ–≥–æ –Ω–µ –≤—Å—Ç—Ä–µ—Ç–∏–ª'
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
        elif direction == 'right':
            story = '–¢—ã –ø–æ—à–µ–ª –Ω–∞–ø—Ä–∞–≤–æ...\n' \
            '—É–ø–∞–ª –≤ —è–º—É –∏ —É–º–µ—Ä'
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
        elif direction == 'line':
            story = '–¢—ã –ø–æ—à–µ–ª –ø—Ä—è–º–æ...\n' \
            '–≤—Å—Ç—Ä–µ—Ç–∏–ª –ª—é–¥–µ–π –∏ –æ–Ω–∏ —Ç–µ–±—è —É–±–∏–ª–∏'
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
        elif direction == 'back':
            story = '–¢—ã –ø–æ—à–µ–ª –Ω–∞–∑–∞–¥...\n' \
            '–∏ —Å–≥–æ—Ä–µ–ª'
            continue_kb = types.InlineKeyboardMarkup()
            continue_kb.add(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Ä–∞–∑–≤–∏–ª–∫—É", callback_data="continue_adventure_razvilka"))
            bot.delete_message(callback.message.chat.id, callback.message.message_id)

        elif direction == "razvilka":
            story = "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
            continue_kb = types.InlineKeyboardMarkup()
            continue_kb.add(types.InlineKeyboardButton("–ù–∞–ª–µ–≤–æ", callback_data="continue_adventure_left"))
            continue_kb.add(types.InlineKeyboardButton("–ù–∞–ø—Ä–∞–≤–æ", callback_data="continue_adventure_right"))
            continue_kb.add(types.InlineKeyboardButton("–ü—Ä—è–º–æ", callback_data="continue_adventure_line"))
            continue_kb.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="continue_adventure_back"))
            bot.delete_message(callback.message.chat.id, callback.message.message_id)

        if direction1 == "con":
            story = "–¢—ã —É–≤–∏–¥–µ–ª —Ö–æ–ª–º...\n" \
            "–ü–æ–¥–Ω—è—Ç—å—Å—è ?"
            continue_kb.add(types.InlineKeyboardButton("–ù–µ—Ç", callback_data="continue_adventure_con")),
            continue_kb.add(types.InlineKeyboardButton("–î–∞", callback_data="continue_adventure_holmup")),
            *_, direction2 = callback.data.split("_")

        if direction2 == "–ù–µ—Ç":
            pass


        bot.send_message(
            callback.message.chat.id,
            story,
            parse_mode="Markdown",
            reply_markup=continue_kb
        )


# @bot.callback_query_handler(func=lambda callback: callback.data.startswith("race"))
# def handle_callback(callback: types.CallbackQuery):
#     kb = types.InlineKeyboardMarkup()

#     _, race = callback.data.split(":")
#     if race == "—á–µ–ª–æ–≤–µ–∫":
#         kb.add(
#             types.InlineKeyboardButton("–ë—Ä–µ—Ç–æ–Ω—Ü—ã", callback_data="subrace:–±—Ä–µ—Ç–æ–Ω—Ü—ã"),
#             types.InlineKeyboardButton("–ò–º–ø–µ—Ä—Ü—ã", callback_data="subrace:–ò–º–ø–µ—Ä—Ü—ã"),
#             types.InlineKeyboardButton("–ù–æ—Ä–¥—ã", callback_data="subrace:–ù–æ—Ä–¥—ã"),
#             types.InlineKeyboardButton("–†–µ–¥–≥–∞—Ä–¥—ã", callback_data="subrace:–†–µ–¥–≥–∞—Ä–¥—ã"),
#         )

#     if race == "—ç–ª—å—Ñ":
#         kb.add(
#             types.InlineKeyboardButton("–ê–ª—å—Ç–º–µ—Ä—ã (–≤—ã—Å–æ–∫–∏–µ —ç–ª—å—Ñ—ã)", callback_data="subrace:–ê–ª—å—Ç–º–µ—Ä—ã (–≤—ã—Å–æ–∫–∏–µ —ç–ª—å—Ñ—ã)"),
#             types.InlineKeyboardButton("–ë–æ—Å–º–µ—Ä—ã (–ª–µ—Å–Ω—ã–µ —ç–ª—å—Ñ—ã)", callback_data="subrace:–ë–æ—Å–º–µ—Ä—ã (–ª–µ—Å–Ω—ã–µ —ç–ª—å—Ñ—ã)"),
#             types.InlineKeyboardButton( "–î–∞–Ω–º–µ—Ä—ã (—Ç—ë–º–Ω—ã–µ —ç–ª—å—Ñ—ã)", callback_data="subrace:–î–∞–Ω–º–µ—Ä—ã (—Ç—ë–º–Ω—ã–µ —ç–ª—å—Ñ—ã)" ),
#             types.InlineKeyboardButton( "–û—Ä–∫–∏ (–æ—Ä—Å–∏–º–µ—Ä—ã)", callback_data="subrace:–û—Ä–∫–∏ (–æ—Ä—Å–∏–º–µ—Ä—ã)" ),
#         )


#     if race == "–∑–≤–µ—Ä–æ—á–µ–ª–æ–≤–µ–∫":
#         kb.add(
#             types.InlineKeyboardButton("–ö–∞–¥–∂–∏—Ç—ã", callback_data="subrace:–ö–∞–¥–∂–∏—Ç—ã"),
#             types.InlineKeyboardButton("–ê—Ä–≥–æ–Ω–∏–∞–Ω–µ", callback_data="subrace:–ê—Ä–≥–æ–Ω–∏–∞–Ω–µ"),
#             types.InlineKeyboardButton("–û–±–æ—Ä–æ—Ç–µ–Ω—å", callback_data="subrace:–û–±–æ—Ä–æ—Ç–µ–Ω—å"),
#             types.InlineKeyboardButton("–ö–µ–Ω—Ç–∞–≤—Ä", callback_data="subrace:–ö–µ–Ω—Ç–∞–≤—Ä"),
#         )
#         if subrace == "–ö–∞–¥–∂–∏—Ç—ã":
#             description = (
#             "–ë–∞—Ñ—ã —Ä–∞—Å—ã:\n"
#             "–Ω–∞–Ω–æ—Å—è—Ç –ø–æ–≤—ã—à–µ–Ω–Ω—ã–π —É—Ä–æ–Ω –±–µ–∑ –æ—Ä—É–∂–∏—è (15 —É—Ä–æ–Ω–∞),\n"
#             "–º–æ–≥—É—Ç –æ–±—ã—Å–∫–∏–≤–∞—Ç—å —Å–∞–º—ã–µ —Ç–µ–º–Ω—ã–µ –∑–∞–∫–æ—É–ª–∫–∏ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –Ω–æ—á–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è"
#         )
#     elif subrace == "–ê—Ä–≥–æ–Ω–∏–∞–Ω–µ":
#         description = "–û–ø–∏—Å–∞–Ω–∏–µ –∞—Ä–≥–æ–Ω–∏–∞–Ω..."
#     # –î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–¥—Ä–∞—Å

#     kb = types.InlineKeyboardMarkup()
#     kb.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back:race"))

#     bot.edit_message_text(
#         chat_id=callback.message.chat.id,
#         message_id=callback.message.id,
#         text=f"{subrace}\n\n{description}",
#         reply_markup=kb
#     )

#     kb.add(types.InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="back:race"))

#     bot.edit_message_reply_markup(
#         callback.message.chat.id, callback.message.id, reply_markup=kb
#     )


# @bot.callback_query_handler(func=lambda callback: callback.data.startswith("back"))
# def handle_back_btn(call: types.CallbackQuery):
#     _, target = call.data.split(":")
#     if target == "race":
#         kb = types.InlineKeyboardMarkup().add(
#             types.InlineKeyboardButton("–ß–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ —Ä–∞—Å—ã", callback_data="race:—á–µ–ª–æ–≤–µ–∫"),
#             types.InlineKeyboardButton("–≠–ª—å—Ñ–∏–π—Å–∫–∏–µ —Ä–∞—Å—ã", callback_data="race:—ç–ª—å—Ñ"),
#             types.InlineKeyboardButton("–ó–≤–µ—Ä–æ—Ä–∞—Å—ã", callback_data="race:–∑–≤–µ—Ä–æ—á–µ–ª–æ–≤–µ–∫"),
#         )
#         bot.edit_message_reply_markup(
#             call.message.chat.id, call.message.id, reply_markup=kb
#         )


bot.infinity_polling()
